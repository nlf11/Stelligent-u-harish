AWSTemplateFormatVersion: 2010-09-09
Description: Creation of Lambda fucntion
Parameters:
  apiGatewayStageName:
    Type: String
    AllowedPattern: '[a-z0-9]+'
    Default: call
  apiGatewayHTTPMethod:
    Type: String
    Default: POST
Resources:
  MyLambdaFunction:
    DependsOn: DBTable
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: TestLambdaFunction
      Role: !GetAtt LambdaIamRole.Arn
      Runtime: nodejs12.x
      Handler: index.my_handler
      Code:
        ZipFile: |
          const AWS = require('aws-sdk');
          const ddb = new AWS.DynamoDB.DocumentClient({region: 'us-east-1'});
          exports.my_handler = async (event, context, callback) => {
            const requestId = context.awsRequestId;
            await createMessage(requestId).then(() => {
              callback(null, {
                statusCode: 201,
                body: '',
                headers: {
                  'Access-Control-Allow-Origin' : '*'
                }
              });
            }).catch((err) => {
          console.error(err)
          })
          };
          function createMessage(requestId) {
            const params = {
              TableName: 'Message',
              Item: {
                'id' : requestId,
                'message' : 'Hello AWS!'
                }
              }
            return ddb.put(params).promise();
          }
  LambdaIamRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  LambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref MyLambdaFunction
      Principal: 324320755747
      SourceArn: !Sub >-
        arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${apiGateway}/${apiGatewayStageName}/${apiGatewayHTTPMethod}/
  apiGatewayRootMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: !Ref apiGatewayHTTPMethod
      Integration:
        ConnectionType: INTERNET
        Credentials: !GetAtt GatewayIamRole.Arn
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub 
          - >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyLambdaFunction.Arn}/invocations
          - OperationName: lambda
      ResourceId: !GetAtt apiGateway.RootResourceId
      RestApiId: !Ref apiGateway
  apiGateway:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Description: API Gateway
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: my-api
  apigatewayresource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt apiGateway.RootResourceId
      PathPart: lambda
      RestApiId: !Ref apiGateway
  apiGatewayDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - apiGatewayRootMethod
    Properties:
      RestApiId: !Ref apiGateway
      StageName: !Ref apiGatewayStageName
  GatewayIamRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: LambdaAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'lambda:*'
                Resource: !GetAtt MyLambdaFunction.Arn
  DBTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: Message
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
